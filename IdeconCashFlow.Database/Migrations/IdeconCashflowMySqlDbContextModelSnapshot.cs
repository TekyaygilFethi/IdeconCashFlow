// <auto-generated />
using System;
using IdeconCashFlow.Database.ContextFolder;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdeconCashFlow.Database.Migrations
{
    [DbContext(typeof(IdeconCashflowMySqlDbContext))]
    partial class IdeconCashflowMySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.AnaBaslik", b =>
                {
                    b.Property<string>("ID");

                    b.Property<string>("BaslikTanimi")
                        .HasMaxLength(10000);

                    b.Property<bool>("IsVadeIliskili");

                    b.Property<string>("SirketKodu");

                    b.HasKey("ID");

                    b.ToTable("AnaBaslikTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.Kalem", b =>
                {
                    b.Property<string>("ID");

                    b.Property<string>("Aciklama");

                    b.Property<string>("AnaBaslikID");

                    b.Property<DateTime>("DuzenlemeTarihi");

                    b.Property<int?>("DuzenleyenUserID");

                    b.Property<string>("EkAlan1");

                    b.Property<string>("EkAlan2");

                    b.Property<string>("EkAlan3");

                    b.Property<string>("EkAlan4");

                    b.Property<string>("EkAlan5");

                    b.Property<DateTime>("EklemeTarihi");

                    b.Property<int?>("EkleyenUserID");

                    b.Property<DateTime>("FaturaTarihi");

                    b.Property<bool>("IsTahmin");

                    b.Property<bool>("IsUserCreation");

                    b.Property<string>("KalemTipiAciklama");

                    b.Property<string>("KalemTipiSymbol");

                    b.Property<string>("ParaBirimiKalemID");

                    b.Property<string>("TekliBaslikID");

                    b.Property<double>("Tutar");

                    b.Property<DateTime>("VadeTarihi");

                    b.HasKey("ID");

                    b.HasIndex("AnaBaslikID");

                    b.HasIndex("DuzenleyenUserID");

                    b.HasIndex("EkleyenUserID");

                    b.HasIndex("ParaBirimiKalemID")
                        .IsUnique();

                    b.HasIndex("TekliBaslikID");

                    b.ToTable("KalemTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.ParaBirimi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<int>("DecimalDigits");

                    b.Property<string>("Kur");

                    b.Property<string>("NamePlural");

                    b.Property<double>("Rounding");

                    b.Property<string>("Symbol");

                    b.Property<string>("SymbolNative");

                    b.HasKey("ID");

                    b.ToTable("ParaBirimiTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.ParaBirimiKalem", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KalemID")
                        .IsRequired();

                    b.Property<int>("ParaBirimiID");

                    b.Property<double>("Tutar");

                    b.HasKey("ID");

                    b.HasIndex("ParaBirimiID");

                    b.ToTable("ParaBirimiKalemTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.ParaBirimiTutar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ParaBirimiID");

                    b.Property<string>("TekliBaslikID");

                    b.Property<double>("Tutar");

                    b.HasKey("ID");

                    b.HasIndex("ParaBirimiID");

                    b.HasIndex("TekliBaslikID");

                    b.ToTable("ParaBirimiTutarTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.TekliBaslik", b =>
                {
                    b.Property<string>("ID");

                    b.Property<string>("FlowDirectionExplanation");

                    b.Property<string>("FlowDirectionSymbol");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("TekliBaslikTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("SirketKodu");

                    b.Property<string>("Surname");

                    b.Property<string>("Username");

                    b.Property<string>("Yetki");

                    b.HasKey("ID");

                    b.ToTable("UserTable");
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.AnaBaslik", b =>
                {
                    b.HasOne("IdeconCashFlow.Data.POCO.TekliBaslik", "TekliBaslik")
                        .WithOne("AnaBaslik")
                        .HasForeignKey("IdeconCashFlow.Data.POCO.AnaBaslik", "ID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.Kalem", b =>
                {
                    b.HasOne("IdeconCashFlow.Data.POCO.AnaBaslik", "AnaBaslik")
                        .WithMany("Kalemler")
                        .HasForeignKey("AnaBaslikID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IdeconCashFlow.Data.POCO.User", "Duzenleyen")
                        .WithMany("DuzenlenenKalemler")
                        .HasForeignKey("DuzenleyenUserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IdeconCashFlow.Data.POCO.User", "Ekleyen")
                        .WithMany("EklenenKalemler")
                        .HasForeignKey("EkleyenUserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IdeconCashFlow.Data.POCO.ParaBirimiKalem", "ParaBirimiKalem")
                        .WithOne("Kalem")
                        .HasForeignKey("IdeconCashFlow.Data.POCO.Kalem", "ParaBirimiKalemID")
                        .HasPrincipalKey("IdeconCashFlow.Data.POCO.ParaBirimiKalem", "KalemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdeconCashFlow.Data.POCO.TekliBaslik", "TekliBaslik")
                        .WithMany("Kalemler")
                        .HasForeignKey("TekliBaslikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.ParaBirimiKalem", b =>
                {
                    b.HasOne("IdeconCashFlow.Data.POCO.ParaBirimi", "ParaBirimi")
                        .WithMany("ParaBirimiKalemler")
                        .HasForeignKey("ParaBirimiID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("IdeconCashFlow.Data.POCO.ParaBirimiTutar", b =>
                {
                    b.HasOne("IdeconCashFlow.Data.POCO.ParaBirimi", "ParaBirimi")
                        .WithMany("ParaBirimiTutarlar")
                        .HasForeignKey("ParaBirimiID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IdeconCashFlow.Data.POCO.TekliBaslik", "TekliBaslik")
                        .WithMany("Currencies")
                        .HasForeignKey("TekliBaslikID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
